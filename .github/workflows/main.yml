# This is a basic workflow to help you get started with Actions
name: CI

# Controls when the workflow will run
on:
  push:
    branches:
      - "**"
    tags-ignore:
      - "**"
  pull_request:
    branches:
      - "**"
    tags-ignore:
      - "**"
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:


# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  AllianceAuth:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11"]
        mariadb-version: ["10.10"]

    steps:
      - uses: actions/checkout@v3
      - uses: ankane/setup-mariadb@v1
        with:
          database: alliance_auth
          mariadb-version: ${{ matrix.mariadb-version }}
      - run: mysql -D alliance_auth -e 'SELECT VERSION()'

      - uses: shogo82148/actions-setup-redis@v1
        with:
          redis-version: "latest"

      - run: redis-cli ping

      - uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      - run: npm install -g yarn

      - name: Run Auth Tests
        run: ./run_test_alliance_auth.sh
  CorpTools:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11"]
        mariadb-version: ["10.11", "11.2"]
    steps:
      - uses: actions/checkout@v3
      - uses: ankane/setup-mariadb@v1
        with:
          database: alliance_auth
          mariadb-version: ${{ matrix.mariadb-version }}
      - run: mysql -D alliance_auth -e 'SELECT VERSION()'
      - uses: shogo82148/actions-setup-redis@v1
        with:
          redis-version: "latest"
      - run: redis-cli ping
      - uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      - run: npm install -g yarn

      - name: Run Core Tests
        run: ./run_test_corp_tools.sh
      - name: Run Moon Tests
        run: ./run_test_corp_tools_moons.sh
      - name: Run Invoices Tests
        run: ./run_test_corp_tools_invoices.sh
  SecureGroups:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11"]
        mariadb-version: ["10.10"]
    steps:
      - uses: actions/checkout@v3
      - uses: ankane/setup-mariadb@v1
        with:
          database: alliance_auth
          mariadb-version: ${{ matrix.mariadb-version }}
      - run: mysql -D alliance_auth -e 'SELECT VERSION()'
      - uses: shogo82148/actions-setup-redis@v1
        with:
          redis-version: "latest"

      - run: redis-cli ping

      - uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      - run: npm install -g yarn

      - name: Run Secure Groups Tests
        run: ./run_test_secure_groups.sh
  Blacklist:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11"]
        mariadb-version: ["10.10"]
    steps:
      - uses: actions/checkout@v3
      - uses: ankane/setup-mariadb@v1
        with:
          database: alliance_auth
          mariadb-version: ${{ matrix.mariadb-version }}
      - run: mysql -D alliance_auth -e 'SELECT VERSION()'
      - uses: shogo82148/actions-setup-redis@v1
        with:
          redis-version: "latest"

      - run: redis-cli ping

      - uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      - run: npm install -g yarn

      - name: Run Blacklist Tests
        run: ./run_test_blacklist.sh
